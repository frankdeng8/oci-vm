#!/usr/bin/python
##
# Monitor QEMU QMP events
#

from __future__ import print_function
import sys
import os
import json
from qmp import QEMUMonitorProtocol

def pprint(qmp):
    indent = 4
    jsobj = json.dumps(qmp, indent=indent)
    print(str(jsobj))

cmd, args = sys.argv[0], sys.argv[1:]
socket_path = None

def usage():
    return '''environment variables:
    QMP_SOCKET=<path | addr:port>
usage:
    %s [-h] [-s <QMP socket path | addr:port>] [<path>]
''' % cmd

def usage_error(error_msg = "unspecified error"):
    sys.stderr.write('%s\nERROR: %s\n' % (usage(), error_msg))
    exit(1)

if len(args) > 0:
    if args[0] == "-h":
        print(usage())
        exit(0);
    elif args[0] == "-s":
        try:
            socket_path = args[1]
        except:
            usage_error("missing argument: QMP socket path or address");
        args = args[2:]

if not socket_path:
    if 'QMP_SOCKET' in os.environ:
        socket_path = os.environ['QMP_SOCKET']
    else:
        usage_error("no QMP socket path or address given");

srv = QEMUMonitorProtocol(socket_path)
srv.connect()

while True:
    ev = srv.pull_event(wait=True)
    if ev:
        pprint(ev)
